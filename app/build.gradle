apply plugin: 'com.android.application'

def acra = new Properties()
acra.load(new FileInputStream("app/acra.properties"))

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE-LGPL-2.1.txt'
        exclude 'META-INF/LICENSE-LGPL-3.txt'
        exclude 'META-INF/LICENSE-W3C-TEST'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.wbrawner.simplemarkdown"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 16
        versionName "0.6.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "ACRA_URL", "\"${acra.getProperty("url")}\""
        buildConfigField "String", "ACRA_USER", "\"${acra.getProperty("user")}\""
        buildConfigField "String", "ACRA_PASS", "\"${acra.getProperty("pass")}\""
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "platform"
    productFlavors {
        standard {}
        samsung {
            applicationId "com.wbrawner.simplemarkdown.samsung"
            minSdkVersion 21
        }
    }
    dexOptions {
        jumboMode true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    acraVersion = '5.1.3'
    support_version = "28.0.0"
}

dependencies {
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v13:$support_version"
    implementation 'com.commonsware.cwac:anddown:0.3.0'
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation "ch.acra:acra-http:$acraVersion"
    samsungImplementation project(":IAP5Helper")
}
